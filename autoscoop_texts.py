# -*- coding: utf-8 -*-


class T:
    @staticmethod
    def new_gift(id: int | str, price: int, total_amount: int, is_premium: bool) -> str:
        return f"""
üÜï <b>–ù–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫</b>

üíé ID: <code>{id}</code>
‚≠ê –¶–µ–Ω–∞: {price} ‚≠ê
üì¶ –î–æ—Å—Ç—É–ø–Ω–æ: {total_amount}
{'üëë Premium' if is_premium else 'üéÅ –û–±—ã—á–Ω—ã–π'}
"""

    @staticmethod
    def insufficient_balance_notification(balance: int) -> str:
        return f"‚ö†Ô∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞</b> ‚Äî —É –≤–∞—Å {balance} ‚≠ê, –º–∏–Ω–∏–º—É–º –Ω—É–∂–µ–Ω 1 ‚≠ê –¥–ª—è –ø–æ–∫—É–ø–æ–∫"

    @staticmethod
    def no_active_orders() -> str:
        return "‚ö†Ô∏è <b>–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ—Ä–¥–µ—Ä–æ–≤</b> ‚Äî —Å–æ–∑–¥–∞–π—Ç–µ –æ—Ä–¥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–∫–æ–≤"

    @staticmethod
    def insufficient_balance_for_order(order_name: str, balance: int, price: int) -> str:
        return f"‚ö†Ô∏è <b>–û—Ä–¥–µ—Ä {order_name}</b>: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –±–∞–ª–∞–Ω—Å–∞ ({balance} ‚≠ê) –¥–ª—è —Ü–µ–Ω—ã {price} ‚≠ê"

    @staticmethod
    def price_not_match_order(order_name: str, gift_price: int, min_price: int, max_price: int) -> str:
        return f"‚ö†Ô∏è <b>–û—Ä–¥–µ—Ä {order_name}</b>: —Ü–µ–Ω–∞ {gift_price} ‚≠ê –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (–Ω—É–∂–Ω–æ –æ—Ç {min_price} –¥–æ {max_price} ‚≠ê)"

    @staticmethod
    def supply_not_match_order(order_name: str, gift_supply: int, min_supply: int, max_supply: int) -> str:
        return f"‚ö†Ô∏è <b>–û—Ä–¥–µ—Ä {order_name}</b>: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {gift_supply} –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç (–Ω—É–∂–Ω–æ –æ—Ç {min_supply} –¥–æ {max_supply})"

    @staticmethod
    def budget_exceeded(order_name: str, spent: int, budget: int) -> str:
        return f"‚ö†Ô∏è <b>–û—Ä–¥–µ—Ä {order_name}</b>: –±—é–¥–∂–µ—Ç –∏—Å—á–µ—Ä–ø–∞–Ω ({spent}/{budget} ‚≠ê)"

    @staticmethod
    def insufficient_budget_for_single_gift(order_name: str, remaining_budget: int, price: int) -> str:
        return f"‚ö†Ô∏è <b>–û—Ä–¥–µ—Ä {order_name}</b>: –≤ –±—é–¥–∂–µ—Ç–µ {remaining_budget} ‚≠ê, –Ω—É–∂–Ω–æ {price} ‚≠ê"

    @staticmethod
    def no_suitable_orders(gift_id: int | str, price: int) -> str:
        return f"‚ö†Ô∏è <b>–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –æ—Ä–¥–µ—Ä–æ–≤</b> –¥–ª—è –ø–æ–¥–∞—Ä–∫–∞ {gift_id} —Ü–µ–Ω–æ–π {price} ‚≠ê"

    @staticmethod
    def order_buying(order_name: str, remaining_to_buy: int) -> str:
        return f"üéØ <b>–û—Ä–¥–µ—Ä:</b> {order_name} ‚Äî –ø–æ–∫—É–ø–∞—é –¥–æ {remaining_to_buy} —à—Ç."

    @staticmethod
    def premium_check_start() -> str:
        return "üëë <b>Premium –ø–æ–¥–∞—Ä–æ–∫ - –ø—Ä–æ–≤–µ—Ä—è—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–∫–∏ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç...</b>"

    @staticmethod
    def personal_not_set() -> str:
        return "‚ùå <b>–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω</b>\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ Premium –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç"

    @staticmethod
    def premium_disabled() -> str:
        return "‚ùå <b>Premium –ø–æ–∫—É–ø–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã</b>\n\n–í–∫–ª—é—á–∏—Ç–µ –ø–æ–∫—É–ø–∫—É Premium –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö"

    @staticmethod
    def no_premium() -> str:
        return "‚ùå <b>–£ –≤–∞—Å –Ω–µ—Ç Telegram Premium</b>\n\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ Premium –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–æ–¥–ø–∏—Å–∫–∞"

    @staticmethod
    def premium_personal_buying(count: int) -> str:
        return f"üöÄ <b>–ü–æ–∫—É–ø–∞—é {count} Premium –ø–æ–¥–∞—Ä–∫–æ–≤ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç...</b>"

    @staticmethod
    def success_buy_personal(count: int, gift_id: int | str) -> str:
        gift_text = "–ø–æ–¥–∞—Ä–æ–∫" if count == 1 else f"{count} –ø–æ–¥–∞—Ä–∫–æ–≤"
        return f"""
‚úÖ <b>–£—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω–æ {gift_text}!</b>

üíé ID –ø–æ–¥–∞—Ä–∫–∞: <code>{gift_id}</code>
üîß –ú–µ—Ç–æ–¥: —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç
üëë –¢–∏–ø: Premium –ø–æ–¥–∞—Ä–æ–∫
"""

    @staticmethod
    def fail_buy_personal(gift_id: int | str) -> str:
        return f"‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç</b>\n\nüíé ID: <code>{gift_id}</code>\n‚ö†Ô∏è –ü–æ–¥–∞—Ä–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è"

    @staticmethod
    def error_buy_personal(gift_id: int | str) -> str:
        return f"‚ùå <b>–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç</b>\n\nüíé ID: <code>{gift_id}</code>\nüîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ"

    @staticmethod
    def only_personal_no_account() -> str:
        return "‚ùå <b>–í–∫–ª—é—á–µ–Ω–æ '—Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π', –Ω–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω</b>"

    @staticmethod
    def only_personal_buying(count: int) -> str:
        return (
            f"üöÄ <b>–ü–æ–∫—É–ø–∞—é {count} –ø–æ–¥–∞—Ä–∫–æ–≤ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç (—Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–π)</b>"
        )

    @staticmethod
    def success_buy_personal_short(order_name: str) -> str:
        return f"‚úÖ <b>–û—Ä–¥–µ—Ä {order_name}</b>: –∫—É–ø–ª–µ–Ω–æ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π"

    @staticmethod
    def bot_api_order_start(order_name: str, count: int) -> str:
        return f"üöÄ <b>–û—Ä–¥–µ—Ä:</b> {order_name} ‚Äî –ø–æ–∫—É–ø–∫–∞ {count} —á–µ—Ä–µ–∑ Bot API"

    @staticmethod
    def insufficient_funds_budget(balance: int, spent: int, budget: int) -> str:
        return f"‚ö†Ô∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤/–±—é–¥–∂–µ—Ç–∞ –ø–æ –æ—Ä–¥–µ—Ä—É</b> ‚Äî –±–∞–ª–∞–Ω—Å: {balance} ‚≠ê, –ø–æ—Ç—Ä–∞—á–µ–Ω–æ: {spent}/{budget}"

    @staticmethod
    def order_attempt(order_name: str, attempt_idx: int, total: int) -> str:
        return f"‚è≥ <b>–û—Ä–¥–µ—Ä {order_name}</b>: –ø–æ–ø—ã—Ç–∫–∞ {attempt_idx}/{total}"

    @staticmethod
    def order_success(order_name: str, i: int, price: int) -> str:
        return f"‚úÖ <b>–û—Ä–¥–µ—Ä {order_name}</b>: –∫—É–ø–ª–µ–Ω {i} ‚Äî {price} ‚≠ê"

    @staticmethod
    def order_bot_api_failed_try_personal(order_name: str) -> str:
        return f"‚ùå <b>–û—Ä–¥–µ—Ä {order_name}</b>: Bot API –Ω–µ —É–¥–∞–ª–æ—Å—å, –ø—Ä–æ–±—É—é –ª–∏—á–Ω—ã–π"

    @staticmethod
    def personal_failed(order_name: str) -> str:
        return f"‚ùå <b>–û—Ä–¥–µ—Ä {order_name}</b>: –ª–∏—á–Ω—ã–π –Ω–µ –ø–æ–º–æ–≥"

    @staticmethod
    def personal_account_error() -> str:
        return "‚ùå <b>–û—à–∏–±–∫–∞ –ª–∏—á–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞</b>"

    @staticmethod
    def personal_unavailable() -> str:
        return "‚ö†Ô∏è <b>–õ–∏—á–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</b>"

    @staticmethod
    def insufficient_funds_changed() -> str:
        return "‚ö†Ô∏è <b>–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤</b> ‚Äî –±–∞–ª–∞–Ω—Å –∏–∑–º–µ–Ω–∏–ª—Å—è –≤–æ –≤—Ä–µ–º—è –ø–æ–∫—É–ø–∫–∏"

    @staticmethod
    def order_summary(order_name: str, count: int) -> str:
        return f"üéâ <b>–û—Ä–¥–µ—Ä {order_name}</b>: –∫—É–ø–ª–µ–Ω–æ {count}"

    @staticmethod
    def final_summary(
        gift_id: int | str, total_success: int, final_balance: int
    ) -> str:
        return f"üìä <b>–ò—Ç–æ–≥ –ø–æ –ø–æ–¥–∞—Ä–∫—É {gift_id}</b>: –∫—É–ø–ª–µ–Ω–æ {total_success}, –±–∞–ª–∞–Ω—Å: {final_balance} ‚≠ê"

    @staticmethod
    def critical_purchase_error(msg: str) -> str:
        return f"‚ùå <b>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ</b>: {msg}"