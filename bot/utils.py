from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.enums import ParseMode
from bot.database import get_user
from bot.states import SettingsInput


async def refund_stars(bot, user_id: int, amount: int, charge_id: str):
    try:
        await bot.refund_star_payment(
            user_id=user_id, telegram_payment_charge_id=charge_id
        )
        return True
    except:
        return False


async def show_settings_menu(obj, is_message: bool):
    user = await get_user(obj.from_user.id)
    max_gifts = user.get("max_gifts_per_type", 1)
    min_price = user.get("min_price", 1)
    max_price = user.get("max_price", 10000)
    min_supply = user.get("min_supply", 1)
    max_supply = user.get("max_supply", 999999)
    rtype = user.get("gift_recipient_type", "personal")
    rid = user.get("gift_recipient_id")
    if rtype == "channel":
        rtext = f"@{user.get('gift_recipient_username', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}"
    else:
        rtext = f"ID: {rid}" if rid else "–°–µ–±–µ"
    text = f"""‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ê–≤—Ç–æ—Å–∫—É–ø–∞</b> üåü

üéÅ –ú–∞–∫—Å. –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ —Ç–∏–ø: <b>{max_gifts}</b>
üí∞ –î–∏–∞–ø–∞–∑–æ–Ω —Ü–µ–Ω—ã: <b>{min_price:,} - {max_price:,}</b> ‚≠ê
üì¶ –î–∏–∞–ø–∞–∑–æ–Ω supply: <b>{min_supply:,} - {max_supply:,}</b>
üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: <b>{rtext}</b> ({rtype.capitalize()})"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üéÅ –ö–æ–ª. –ø–æ–¥–∞—Ä–∫–æ–≤ (1-5)", callback_data="choose_max_gifts"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üí∞ –§–∏–ª—å—Ç—Ä —Ü–µ–Ω—ã", callback_data="price_filters"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì¶ –§–∏–ª—å—Ç—Ä supply", callback_data="supply_filters"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üë§ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª—É—á–∞—Ç–µ–ª—è", callback_data="recipient_settings"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main"
                )
            ],
        ]
    )
    if is_message:
        await obj.answer(text, reply_markup=kb, parse_mode=ParseMode.HTML)
    else:
        await obj.message.edit_text(text, reply_markup=kb, parse_mode=ParseMode.HTML)


async def show_main_menu(message):
    text = """‚ú® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</b>

üëã –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!

<b>–ú–µ–Ω—é:</b>
‚Ä¢ üí∞ –ë–∞–ª–∞–Ω—Å –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
‚Ä¢ ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Å–∫—É–ø–∞
‚Ä¢ ‚ùì –ü–æ–º–æ—â—å

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π! üöÄ"""
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="start_deposit"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="show_balance"
                )
            ],
            [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="show_settings")],
            [InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å", callback_data="show_help")],
        ]
    )
    await message.answer(text, reply_markup=kb, parse_mode=ParseMode.HTML)
